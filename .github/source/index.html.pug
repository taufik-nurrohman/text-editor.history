extends _index.pug

block state
  - const title = 'History \xB7 Text Editor'
  - const scripts = ['../text-editor/index.min.js', 'index.min.js']

block script
  script
    | Object.assign(TE.prototype, TE.History);
    |
    | const editor = new TE(document.querySelector('#in'));
    |
    | let dump = document.querySelector('#out');
    |
    | editor.record(); // Record the initial value
    |
    | editor.self.addEventListener('keydown', () => {
    |     setTimeout(() => editor.record(), 1); // Record keyboard interaction
    | });

block content
  main
    p: textarea#in(placeholder!='Type something&hellip;' spellcheck='false')
    p
      button(onclick='dump.innerHTML = \'Index: \' + editor._historyState + \'\\n---\\nHistory: \' + JSON.stringify(editor.history(), null, 2);') Inspect History
      = ' '
      button(onclick='dump.innerHTML = JSON.stringify(editor.history(1), null, 2);') Inspect the 2(nd) History
      = ' '
      button(onclick='editor.record();') Save Selection to History
      = ' '
      button(onclick='editor.loss();') Delete Current History
      = ' '
      button(onclick='editor.loss(editor._historyState);') Delete the Last History
      = ' '
      button(onclick='editor.loss(0);') Delete the First History
      = ' '
      button(onclick='editor.loss(true);') Delete All History
    p
      button(onclick='editor.record().wrap(\'**\', \'**\').record();'): b B
      = ' '
      button(onclick='editor.record().wrap(\'_\', \'_\').record();'): i I
      = ' '
      button(onclick='editor.undo();') Undo
      = ' '
      button(onclick='editor.redo();') Redo
    pre#out: code
    h2 Usage
    h4 Browser
    pre: code
      | &lt;script src="#[a(href='../text-editor/index.min.js' target='_blank') ./text-editor/index.min.js]"&gt;&lt;/script&gt;
      | &lt;script src="#[a(href='index.min.js' target='_blank') ./text-editor.history/index.min.js]"&gt;&lt;/script&gt;
      | &lt;script&gt;
      | Object.assign(TE.prototype, TE.History);
      | &lt;/script&gt;
    h4 CommonJS
    pre: code
      | const TE = require('@taufik-nurrohman/text-editor');
      | const TE_History = require('@taufik-nurrohman/text-editor.history');
      |
      | Object.assign(TE.prototype, TE_History);
    h4 ECMAScript
    pre: code
      | import TE from '@taufik-nurrohman/text-editor';
      | import * as TE_History from '@taufik-nurrohman/text-editor.history';
      |
      | Object.assign(TE.prototype, TE_History);
    h2 Methods and Properties
    h3 editor.history(index)
    p Get history data.
    h3 editor.record(index)
    p Store current value and selection to history.
    h3 editor.loss(index)
    p Remove previous history data.
    h3 editor.undo()
    p Undo previous action.
    h3 editor.redo()
    p Redo previous action.
